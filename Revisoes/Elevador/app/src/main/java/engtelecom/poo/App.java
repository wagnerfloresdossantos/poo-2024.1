/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package engtelecom.poo;

import java.util.Scanner;

/**
 * Classe App, responsável pela interação com o usuário e execução da simulação
 */
public class App {

    private SistemaElevador sistema;

    /**
     * Método contrutor da classe App
     * @param numAndares numero de andares do edifício
     */
    public App(int numAndares) {
        sistema = new SistemaElevador(numAndares);
    }

    /**
     * Exibe o menu de opções para o usuário
     * @return a opção escolhida pelo usuário
     */
    public int menu(){
        Scanner entrada = new Scanner(System.in);

        System.out.println();
        System.out.printf("..::ESCOLHA A OPÇÃO::..\n" +
                "1 - Chamar Elevador para subir\n" +
                "2 - Chamar Elevador para Descer\n" +
                "3 - Selecionar andar de dentro do elevador\n" +
                "4 - Sair do Programa\n");

        int opcao = entrada.nextInt();
        return opcao;
    }

    /**
     * Lê o andar onde o usuário está pedindo o elevador
     * Informa ao elevador que quer subir
     * @return true se bem a operação foi bem sucedida
     * @throws InterruptedException Se a thread for interrompida enquanto dorme
     */
    public boolean subir() throws InterruptedException  {
        Scanner enntrada = new Scanner(System.in);
        System.out.println("Digite o andar que você está: ");
        int andar = enntrada.nextInt();
        if (andar < 0 || andar >= sistema.getNumAndares()) {
            System.out.println("Andar inválido. Por favor, escolha um andar entre 0 e " + (sistema.getNumAndares() - 1));
            return false;
        }
        sistema.chamarElevador(andar, "subir");
        sistema.espera();
        return true;
    }

    /**
     * Lê o andar onde o usuário está pedindo o elevador
     * Informa ao elevador que quer descer
     * @return true se a operação foi bem cucedida
     * @throws InterruptedException Se a thread for interrompida enquanto dorme
     */
    public boolean descer() throws InterruptedException {
        Scanner enntrada = new Scanner(System.in);
        System.out.println("Digite o andar que você está: ");
        int andar = enntrada.nextInt();
        if (andar < 0 || andar >= sistema.getNumAndares()) {
            System.out.println("Andar inválido. Por favor, escolha um andar entre 0 e " + (sistema.getNumAndares() - 1));
            return false;
        }
        sistema.chamarElevador(andar, "descer");
        sistema.espera();
        return true;
    }

    /**
     * Lê o andar de destino selecionado de dentro do elevador, seleciona o andar e executa
     * @return true se a operação foi bem cucedida
     * @throws InterruptedException e a thread for interrompida enquanto dorme
     */
    public boolean andar() throws InterruptedException  {
        Scanner enntrada = new Scanner(System.in);
        System.out.println("Digite o andar: ");
        int andar = enntrada.nextInt();
        if (andar < 0 || andar >= sistema.getNumAndares()) {
            System.out.println("Andar inválido. Por favor, escolha um andar entre 0 e " + (sistema.getNumAndares() - 1));
            return false;
        }
        sistema.selecionaAndar(andar);
        sistema.espera();
        return true;
    }

    /**
     * Método principal que inicializa o sistema e permite a interação com o usuário
     * @param args argumento de linha de comando (Não foi utilizado)
     * @throws InterruptedException Se a thread for interrompida enquanto dorme
     */
    public static void main(String[] args) throws InterruptedException{

        Scanner scanner = new Scanner(System.in);
        System.out.print("Digite o número de andares do prédio: ");
        int numAndares = scanner.nextInt();

        App app = new App(numAndares);
        int opcao;

        /**
         * Loop principal de interação com o usuário
         */
        do {
            opcao = app.menu();
            switch (opcao) {
                case 1 -> app.subir();
                case 2 -> app.descer();
                case 3 -> app.andar();
            }
        } while (opcao != 4);
    }
}
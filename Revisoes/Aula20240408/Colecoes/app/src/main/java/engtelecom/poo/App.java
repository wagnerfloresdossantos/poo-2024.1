/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package engtelecom.poo;


import javax.sound.midi.Soundbank;
import javax.swing.plaf.synth.SynthOptionPaneUI;
import java.time.LocalDate;
import java.util.HashMap;
import java.util.Scanner;
import java.util.SortedMap;

public class App {

    private HashMap<String, Aluno> bancoDeDados;

    public App() {
        this.bancoDeDados = new HashMap<>();
    }

    public int menu() {
        Scanner entrada = new Scanner(System.in);

        System.out.printf("..::SIGAA::..\n1 - Cadastrar\n2 - Atualizar\n3 - Remover\n4 - Listar dados do Aluno\n5 - Listar todos os Alunos\n6 - Sair\n> ");

        int opcao = entrada.nextInt();
        return opcao;
    }

    public boolean cadastrar() {
        Scanner entrada = new Scanner(System.in);

        System.out.println("Nome do aluno:");
        String nome = entrada.nextLine();
        System.out.println("Matrícula do aluno:");
        String matricula = entrada.nextLine();
        System.out.println("Curso do aluno:");
        String curso = entrada.nextLine();
        System.out.println("E-mail do aluno:");
        String email = entrada.nextLine();
        System.out.println("Data de Nascimento do aluno (formato AAAA-MM-DD:");
        String dataNascimento = entrada.nextLine();
        System.out.println("CPF do aluno:");
        String cpf = entrada.nextLine();

        LocalDate dataNasc;
        dataNasc = LocalDate.parse(dataNascimento);

        Aluno novoAluno = new Aluno(nome, matricula,curso, email, dataNasc, cpf);
        bancoDeDados.put(matricula,novoAluno);
        return true;
    }

    public boolean atualizar() {
        System.out.println("Listar...");
        return false;
    }
    public boolean remover() {

        Scanner entrada = new Scanner(System.in);
        System.out.println("Matrícula do Aluno a ser removido; ");
        String matricula = entrada.nextLine();

        if(bancoDeDados.containsKey(matricula)){
            bancoDeDados.remove(matricula);
            return true;
        } else {
            System.out.println("Aluno não encontrado");
            return false;
        }

    }
    public boolean listarDadosDoAuluno() {

        Scanner entrada = new Scanner(System.in);
        System.out.println("Matrícula do Aluno; ");
        String matricula = entrada.nextLine();

        if(bancoDeDados.containsKey(matricula)){
            Aluno aluno = bancoDeDados.get(matricula);
            System.out.println(aluno.toString());
            return true;
        } else {
            System.out.println("Aluno não encontrado");
            return false;
        }
    }

    public boolean listarTodosAulunos() {

        Scanner entrada = new Scanner(System.in);
        String matricula = entrada.nextLine();

        bancoDeDados.forEach( -> System.out.println(aluno.toString());
        );



          return false;

    }

    public static void main(String[] args) {

        App app = new App();
        int opcao;

        do {
            opcao = app.menu();

            switch (opcao) {
                case 1 -> app.cadastrar();
                case 3 -> app.remover();
                case 4 -> app.listarDadosDoAuluno();
            }
        } while (opcao != 6);

    }
}
